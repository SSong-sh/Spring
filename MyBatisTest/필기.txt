스프링 + 웹 프로젝트 > Spring MVC Project


Springg + DB 연동
- Spring JDBC
- MyBatis
- JPA


1. 새 프로젝트
- Project name : MyBatisTest
- Templates: Spring MVC Project
- Enter a topLevelPackage: com.test.mybatis


2. 스프링/자바 버전 변경하기
- pom.xml
- <org.springframework-version>5.0.7.RELEASE</org.springframework-version>
- <java-version>11</java-version>
- <source>11</source>
- <target>11</target>

- 패키지 탐색기 > 우클릭 > properties > Project Facets > Java > 11



-------------------------------------------------------
6. MyBatis 의존성 추가
<dependency>
	<groupId>org.mybatis</groupId>
	<artifactId>mybatis</artifactId>
	<version>3.5.2</version>
</dependency> 
<dependency>
	<groupId>org.mybatis</groupId>
	<artifactId>mybatis-spring</artifactId>
	<version>1.3.2</version>
</dependency> 


<dependency>
	<groupId>org.springframework</groupId>
	<artifactId>spring-tx</artifactId>
	<version>${org.springframework-version}</version>
</dependency> 
<dependency>
	<groupId>org.springframework</groupId>
	<artifactId>spring-jdbc</artifactId>
	<version>${org.springframework-version}</version>
</dependency> 


-- ojdbc8.jar
- 직접 참조
- bulid path -> external jar -> ojdbc8 -> deployment assembly -> add -> java build path entry -> ojdbc8 추가

- MyBatis > 라이브러리(o)
- MyBatis > 설정(x)
- JDBC > 라이브러리 + 설정(O)


JDBC 연결 테스트
- src/test/java > com.test.mybatis.persistence > JDBCTest.java

--------------------------------------------------------------------------------

Connection Pool, 커넥션풀
- Commons DBCP
- HikariCP > 스프링 부트 2.X 부터 기본 적용


1) Commons DBCP
- pom.xml > commons-dbcp 의존성 추가
- root-context.xml > 설정 추가

Commons DBCP > 단위테스트
- src/test/java > com.test.mybatis.persistence > DBCPTest.java


------------------------------------------------------------------------------------

2) HikariCP
- pom.xml > HikariCP 의존성 추가
- root-context.xml > 설정 추가


--------------------------------------------------------------------------------------------

3) MyBatis 설정
- pom.xml >  의존성(4개) 추가
- root-context.xml > 설정 추가



MyBatis(iBatis)
- 영속성 계층(데이터베이스 조작 계층)
- JDBC 역할
- SQL Mapping Framework(***) > SQL의 실행 결과를 객체지향으로 '매핑'해준다.
- JDBC > 생산성 향상, 유지보수 향상
- SQL 분리 (***) > 기존 방식(SQL > 문자열) > MyBatis 방식(XML로 분리)

MyBatis를 스프링에 적용하는 방식
1. XML 매퍼를 사용하는 방법
	- 오늘

2. 인터페이스 매퍼를 사용하는 방법
	- 다음주
	

Log4j 설정
- pom.xml > 버전 수정, 의존성 1개 추가
- src/main/resources > log4jdbc.spylogdelegator.name=net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator
- log4j.xml > 일부 수정
- root-context.xml > 일부수정


========================================================== 설정 끝

MyBatis 사용 + SQL 실행

- com.test.mybatis.controller > MyBatisController.java

- com.test.mybatis.dao > MyBatisDAO.java(I)
					   > MyBatisDAOImpl.java(C)

- com.test.mybatis.dto > MyBatisDTO.java

- src/main/resource > mapper > mybatis.xml

- src/main/resource > config > mybatis-config.xml

- views > list.jsp
		> add.jsp
		> addok.jsp
		
- MyBatisTest > script.sql			









